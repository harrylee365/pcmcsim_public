# Please provide configurations of each submodule
# Note that chunks from "#" would be ignored
# '=' and '#' should be separated by at least one space
# Design reference: DDR4-2666 x8 4Gb device

### Global parameter ###
# Setup options: 
global.system                   = DRAM
global.ucmde.is_jedec           = true
global.tCMD                     = 1
global.ticks_per_cycle          = 750

geq.dbg_msg                     = false
parser.dbg_msg                  = false

### Device definition ###
dram.host_offset                = 6
dram.page_offset                = 6
dram.tBURST                     = 4 # BL=tBURST*2
dram.DQs                        = 8
dram.MATs                       = 128

### Address layout (NOTE: access different ranks has turnaround time) ###
### Lower number lower positioned bits ###
dram.rank_order                 = 2
dram.bank_order                 = 1
dram.bankgroup_order            = 0
dram.half_order                 = 6
dram.partition_order            = 3
dram.row_order                  = 4
dram.col_order                  = 5

dram.rank_bits                  = 1
dram.bank_bits                  = 2
dram.bankgroup_bits             = 1 
dram.half_bits                  = 1
dram.partition_bits             = 2
dram.row_bits                   = 13
dram.col_bits                   = 7

### JEDEC back-end ###
dram.ucmde[0].dbg_msg                 = false
dram.ucmde[0].policy                  = FRFCFS
dram.ucmde[0].arbitrate_scheme        = BANK_FIRST_RR
dram.ucmde[0].page_policy             = OPEN_PAGE
dram.ucmde[0].size_reqlist            = 64
dram.ucmde[0].powerdown               = false
dram.ucmde[0].AR                      = true  # auto-refresh
dram.ucmde[0].SR                      = false # self-refresh
dram.ucmde[0].threshold_starvation    = 4
dram.ucmde[0].powerdown_mode          = FAST_EXIT
dram.ucmde[0].AR.threshold_postpone   = 0
    
dram.ucmde[0].XAW                     = 4
dram.ucmde[0].AR.FGR.order            = 1  # Fine granularity refresh
dram.ucmde[0].AR.per_bank             = true
dram.ucmde[0].AR.tREFW                = 85333334
dram.ucmde[0].AR.tRFC                 = 467
dram.ucmde[0].tCMD                    = 1
dram.ucmde[0].tCL                     = 19
dram.ucmde[0].tRCD                    = 19
dram.ucmde[0].tRP                     = 19
dram.ucmde[0].tRAS                    = 43
dram.ucmde[0].tCWL                    = 18
dram.ucmde[0].tRRD_L                  = 9
dram.ucmde[0].tRRD_S                  = 8
dram.ucmde[0].tCCD_L                  = 7
dram.ucmde[0].tCCD_S                  = 4
dram.ucmde[0].tWTR_L                  = 10
dram.ucmde[0].tWTR_S                  = 4
dram.ucmde[0].tXAW                    = 40
dram.ucmde[0].tRTRS                   = 1
dram.ucmde[0].tPPD                    = 0   # non-zero for LPDDR4. MIN=4nCK
dram.ucmde[0].tAL                     = 0
dram.ucmde[0].tWR                     = 20  # MIN=15ns
dram.ucmde[0].tRTP                    = 10  # MIN=7.5ns or 4nCK
dram.ucmde[0].PD.tRDPDEN              = 24  # MIN=tAL+tCL+4+1
dram.ucmde[0].PD.tWRPDEN              = 42  # MIN=tAL+tCWL+4+tWR/tCK
dram.ucmde[0].PD.tWRAPDEN             = 43  # MIN=tAL+tCWL+4+tWR+1
dram.ucmde[0].PD.tPD                  = 7   # MIN=5ns or 3nCK
dram.ucmde[0].PD.tXP                  = 8   # MIN=6ns or 4nCK
dram.ucmde[0].PD.tXPDLL               = 32  # MIN=24ns or 10nCK
dram.ucmde[0].SR.tCKESR               = 8   # MIN=tCKE+1nCK (MIN[tCKE]=5ns or 3nCK)
dram.ucmde[0].SR.tXS                  = 270 # MIN=tRFC+10ns
dram.ucmde[0].SR.tXSDLL               = 854 # MIN=tDLLK
    
dram.ucmde[0].VDD                     = 1.2
dram.ucmde[0].IDD0                    = 55
dram.ucmde[0].IDD2P0                  = 30
dram.ucmde[0].IDD2P1                  = 30
dram.ucmde[0].IDD2N                   = 36
dram.ucmde[0].IDD3P                   = 32
dram.ucmde[0].IDD3N                   = 40
dram.ucmde[0].IDD4R                   = 151
dram.ucmde[0].IDD4W                   = 119
dram.ucmde[0].IDD5                    = 45
dram.ucmde[0].IDD6                    = 32

dram.media[0].data_enable             = false
dram.media[0].true_enable             = false

